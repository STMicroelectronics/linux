// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
/*
 * Copyright (C) i2SOM 2018 - All Rights Reserved
 * Author: Steve Chen <steve.chen@i2som.tech>.
 */

/dts-v1/;

#include "stm32mp157a-panguboard-lcd.dts"

/ {
	model = "i2SOM PanGu Board and GiantAxe";
	compatible = "i2som,panguboard", "st,stm32mp157";

	aliases {
		serial0 = &uart4;
		serial3 = &usart1;
		serial1 = &usart2;
		serial2 = &usart3;
		serial4 = &uart5;
	};

	wifi_pwrseq: wifi-pwrseq {
		compatible = "mmc-pwrseq-simple";
		reset-gpios = <&gpiof 3 GPIO_ACTIVE_LOW>;
	};
};

&panel_rgb {
	compatible = "innolux,at070tn92";
};

&pinctrl {

	usart3_pins_c: usart3-2 {
		pins1 {
			pinmux = <STM32_PINMUX('D', 8, AF7)>, /* USART3_TX */
				 <STM32_PINMUX('D', 12, AF7)>; /* USART3_RTS */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('D', 9, AF7)>, /* USART3_RX */
				 <STM32_PINMUX('D', 11, AF7)>; /* USART3_CTS_NSS */
			bias-disable;
		};
	};

	usart3_idle_pins_c: usart3-idle-2 {
		pins1 {
			pinmux = <STM32_PINMUX('D', 8, ANALOG)>, /* USART3_TX */
				 <STM32_PINMUX('D', 12, ANALOG)>, /* USART3_RTS */
				 <STM32_PINMUX('D', 11, ANALOG)>; /* USART3_CTS_NSS */
		};
		pins2 {
			pinmux = <STM32_PINMUX('D', 9, AF7)>; /* USART3_RX */
			bias-disable;
		};
	};

	usart3_sleep_pins_c: usart3-sleep-2 {
		pins {
			pinmux = <STM32_PINMUX('D', 8, ANALOG)>, /* USART3_TX */
				 <STM32_PINMUX('D', 12, ANALOG)>, /* USART3_RTS */
				 <STM32_PINMUX('D', 11, ANALOG)>, /* USART3_CTS_NSS */
				 <STM32_PINMUX('D', 9, ANALOG)>; /* USART3_RX */
		};
	};

	bt_reg: bt_reg_on-1 {
		pins {
			pinmux = <STM32_PINMUX('D', 14, GPIO)>;
			drive-push-pull;
			bias-pull-up;
			output-high;
			slew-rate = <0>;
		};
	};

	usart2_pins_b: usart2-b-0 {
		pins1 {
			pinmux = <STM32_PINMUX('D', 5, AF7)>; /* USART2_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('D', 6, AF7)>; /* USART2_RX */
			bias-disable;
		};
	};

	usart2_idle_pins_b: usart2-idle-b-0 {
		pins1 {
			pinmux = <STM32_PINMUX('D', 5, ANALOG)>; /* USART2_TX */
		};
		pins2 {
			pinmux = <STM32_PINMUX('D', 6, AF7)>; /* USART2_RX */
			bias-disable;
		};
	};

	usart2_sleep_pins_b: usart2-sleep-b-0 {
		pins {
			pinmux = <STM32_PINMUX('D', 5, ANALOG)>, /* USART2_TX */
				 <STM32_PINMUX('D', 6, ANALOG)>; /* USART2_RX */
		};
	};

};

&pinctrl_z {
	usart1_pins_a: usart1-0 {
		pins1 {
			pinmux = <STM32_PINMUX('Z', 7, AF7)>; /* USART1_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('Z', 6, AF7)>; /* USART1_RX */
			bias-disable;
		};
	};

	usart1_idle_pins_a: usart1-idle-0 {
		pins1 {
			pinmux = <STM32_PINMUX('Z', 7, ANALOG)>; /* USART1_TX */
		};
		pins2 {
			pinmux = <STM32_PINMUX('Z', 6, AF7)>; /* USART1_RX */
			bias-disable;
		};
	};

	usart1_sleep_pins_a: usart1-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('Z', 7, ANALOG)>, /* USART1_TX */
				 <STM32_PINMUX('Z', 6, ANALOG)>; /* USART1_RX */
		};
	};

	i2c6_pins_a: i2c6-0 {
		pins {
			pinmux = <STM32_PINMUX('Z', 4, AF2)>, /* I2C6_SCL */
				 <STM32_PINMUX('Z', 5, AF2)>; /* I2C6_SDA */
			bias-disable;
			drive-open-drain;
			slew-rate = <0>;
		};
	};

	i2c6_pins_sleep_a: i2c6-1 {
		pins {
			pinmux = <STM32_PINMUX('Z', 4, ANALOG)>, /* I2C6_SCL */
				 <STM32_PINMUX('Z', 5, ANALOG)>; /* I2C6_SDA */
		};
	};

	spi6_pins_a: spi6-0 {
		pins1 {
			pinmux = <STM32_PINMUX('Z', 0, AF8)>, /* SPI4_SCK */
				 <STM32_PINMUX('Z', 2, AF8)>; /* SPI4_MOSI */
				 bias-disable;
				 drive-push-pull;
				 slew-rate = <1>;
		};

		pins2 {
			pinmux = <STM32_PINMUX('Z', 1, AF8)>; /* SPI4_MISO */
		        bias-disable;
		};
	};

	spi6_sleep_pins_a: spi6-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('Z', 0, ANALOG)>, /* SPI4_SCK */
				 <STM32_PINMUX('Z', 1, ANALOG)>, /* SPI4_MISO */
				 <STM32_PINMUX('Z', 2, ANALOG)>; /* SPI4_MOSI */
		};
	};
};

&i2c6 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&i2c6_pins_a>;
	pinctrl-1 = <&i2c6_pins_sleep_a>;
	i2c-scl-rising-time-ns = <100>;
	i2c-scl-falling-time-ns = <7>;
	status = "okay";
	/delete-property/dmas;
	/delete-property/dma-names;

};

&usart1 {
	pinctrl-names = "default", "sleep", "idle";
	pinctrl-0 = <&usart1_pins_a>;
	pinctrl-1 = <&usart1_sleep_pins_a>;
	pinctrl-2 = <&usart1_idle_pins_a>;
	status = "okay";
};

&usart2 {
	pinctrl-names = "default", "sleep", "idle";
	pinctrl-0 = <&usart2_pins_b>;
	pinctrl-1 = <&usart2_sleep_pins_b>;
	pinctrl-2 = <&usart2_idle_pins_b>;
	status = "okay";
};

&usart3 {
	pinctrl-names = "default", "sleep", "idle";
	pinctrl-0 = <&usart3_pins_c>;
	pinctrl-1 = <&usart3_sleep_pins_c>;
	pinctrl-2 = <&usart3_idle_pins_c>;
	st,hw-flow-ctrl;
	status = "okay";

	bluetooth {
		pinctrl-names = "default";
		pinctrl-0 = <&bt_reg>;
		compatible = "brcm,bcm43438-bt";
		max-speed = <3000000>;
	};

};

&uart5 {
	rs485de-gpios = <&gpiog 9 1>;
};

&spi6 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&spi6_pins_a>;
	pinctrl-1 = <&spi6_sleep_pins_a>;
	cs-gpios = <&gpioz 3 0>;
	status = "okay";
};

/* WiFi module */
&sdmmc3 {
	arm,primecell-periphid = <0x10153180>;
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc3_b4_pins_a>;
	pinctrl-1 = <&sdmmc3_b4_od_pins_a>;
	pinctrl-2 = <&sdmmc3_b4_sleep_pins_a>;
	vmmc-supply = <&v3v3>;
	mmc-pwrseq = <&wifi_pwrseq>;
	non-removable;
	st,neg-edge;
	#address-cells = <1>;
	#size-cells = <0>;
	keep-power-in-suspend;
	bus-width = <4>;
	no-1-8-v;
	status = "okay";

	brcmf: bcrmf@1 {
		reg = <1>;
		compatible = "brcm,bcm4329-fmac";
	};
};
